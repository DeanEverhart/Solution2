@model PaginatedList<Project.Models.Model>

@********************** Previous **********************

@model IEnumerable<Project.Models.Model>*@

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

@********************** Previous **********************

<form asp-controller="Model" asp-action="Index"></form>*@

<table class="table">
    <thead>
        <tr>
            <th>
               <a asp-action="Index" asp-route-sortOrder="@ViewData["Text"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Text</a>

               @*<a asp-action="Index" asp-route-sortOrder="@ViewData["Text"]">@Html.DisplayNameFor(model => model.Text)</a>*@

               @* @Html.DisplayNameFor(model => model.Text)*@
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["Number"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Number</a>

                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["Number"]">@Html.DisplayNameFor(model => model.Number)</a>*@

                @*@Html.DisplayNameFor(model => model.Number)*@
            </th>
            <th>
                Bool
                @*@Html.DisplayNameFor(model => model.Bool)*@
            </th>
            <th>
                Date
                @*@Html.DisplayNameFor(model => model.Date)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Text)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bool)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
